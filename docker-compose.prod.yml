version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cinesecret-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cinesecret}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cinesecret-network

  cinesecret-app:
    image: ghcr.io/cleeryy/cinesecret:latest
    container_name: cinesecret-app
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_TRUST_HOST=true
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-cinesecret}?schema=public
      - AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
      - AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
      # Variables spécifiques à ton app de films
      - TMDB_API_KEY=${TMDB_API_KEY}
      - OMDB_API_KEY=${OMDB_API_KEY}
    ports:
      - "3001:3000"
    networks:
      - cinesecret-network
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=cinesecret"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  watchtower:
    image: containrrr/watchtower:latest
    container_name: cinesecret-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_SCOPE=cinesecret
      - WATCHTOWER_CLEANUP=true
    command: --scope cinesecret --cleanup --interval 300
    networks:
      - cinesecret-network

volumes:
  postgres_data:

networks:
  cinesecret-network:
    driver: bridge
